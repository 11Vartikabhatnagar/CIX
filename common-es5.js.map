{"version":3,"sources":["src/app/challenge/challenge.service.ts","src/app/challenge/components/anchor-widget/anchor-widget-service.service.ts","src/app/challenge/create-challenge/create-challenge.service.ts","src/app/register/seekers/seekers.service.ts","src/app/seeker/challenge-dashboard/dashboardmain.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,QAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAG5B,MAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFpB,aAAA,OAAA,GAAU,sDAAA,CAAA,aAAA,CAAA,CAAY,OAAtB;AAEwC;;AAElC,MAAA,YAAY,CAAC,EAAD,EAAG;;AACpB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,oBAA9B,EAAoD;AAAE,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE;AAAN;AAAR,WAApD,EAA0E,SAA1E,EAAb;AACA,S;AAAA;;AAEK,MAAA,gBAAgB,CAAC,EAAD,EAAW;;AAChC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,0BAA9B,EAA0D;AAAE,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE;AAAN;AAAR,WAA1D,EAAgF,SAAhF,EAAb;AACA,S;AAAA;;AAEK,MAAA,mBAAmB,CAAC,WAAD,EAAY;;AACpC,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,oBADT,EAC+B;AAC1C,YAAA,YAAY,EAAE;AAD4B,WAD/B,EAIX,SAJW,EAAb;AAKA,S;AAAA;;AAEK,MAAA,YAAY,CAAC,GAAD,EAAc;;AAC/B,cAAI,IAAI,GAAQ,MAAM,KAAK,IAAL,CACpB,IADoB,CACf,KAAK,OAAL,GAAe,uBADA,EACyB;AAC7C,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE;AAAN;AADuC,WADzB,EAIpB,SAJoB,EAAtB;AAKA,iBAAO,IAAI,CAAC,IAAZ;AACA,S;AAAA;;AAEK,MAAA,wBAAwB,CAAC,QAAD,EAAS;;AACtC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,QAAjD,EAA2D,SAA3D,EAAb;AACA,S;AAAA;;AAEK,MAAA,sBAAsB,CAAC,WAAD,EAAY;;AACvC,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,qBADT,EACgC;AAC3C,YAAA,MAAM,EAAE;AACP,cAAA,gBAAgB,EAAE,WADX;AAEP,cAAA,MAAM,EAAE;AAFD;AADmC,WADhC,EAOX,SAPW,EAAb;AAQA,S;AAAA;;AAEK,MAAA,aAAa,CAAC,QAAD,EAAiB;;AACnC,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,iBADT,EAC4B;AACvC,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE;AAAN;AADiC,WAD5B,EAIX,SAJW,EAAb;AAKA,S;AAAA;;AAEK,MAAA,2BAA2B,CAAC,QAAD,EAAmB,WAAnB,EAAsC;;AACtE,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,kCADT,EAC6C;AACxD,YAAA,IAAI,EAAE;AACL,cAAA,aAAa,EAAE,QADV;AAEL,cAAA,iBAAiB,EAAE;AAFd;AADkD,WAD7C,EAOX,SAPW,EAAb;AAQA,S;AAAA;;AAEK,MAAA,aAAa,CAAC,QAAD,EAAS;;AAC3B,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,sBADT,EACiC;AAC5C,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC;AADsC,WADjC,EAMX,SANW,EAAb;AAOA,S;AAAA;;AAEK,MAAA,0BAA0B,CAAC,QAAD,EAAc;;AAC7C,cAAI,8BAA8B,GAAQ,MAAM,KAAK,IAAL,CAC9C,IAD8C,CACzC,KAAK,OAAL,GAAe,yCAD0B,EACiB;AAC/D,YAAA,MAAM,EAAE;AACP,cAAA,gBAAgB,EAAE,QAAQ,CAAC,WADpB;AAEP,cAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFrB;AADuD,WADjB,EAO9C,SAP8C,EAAhD,C,CAQA;;AACA,cAAI,CAAC,8BAA8B,CAAC,MAApC,EAA4C;AAC3C,kBAAM,KAAK,IAAL,CACJ,IADI,CACC,KAAK,OAAL,GAAe,qCADhB,EACuD;AAC3D,cAAA,IAAI,EAAE;AACL,gBAAA,gBAAgB,EAAE,QAAQ,CAAC,WADtB;AAEL,gBAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFvB;AADqD,aADvD,EAOJ,SAPI,EAAN;AAQA;;AACD;AACA,S;AAAA;;AAEK,MAAA,gCAAgC,CAAC,QAAD,EAAc;;AACnD,cAAI,8BAA8B,GAAQ,MAAM,KAAK,IAAL,CAC9C,IAD8C,CACzC,KAAK,OAAL,GAAe,gDAD0B,EACwB;AACtE,YAAA,MAAM,EAAE;AACP,cAAA,uBAAuB,EAAE,QAAQ,CAAC,QAD3B;AAEP,cAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFrB;AAD8D,WADxB,EAO9C,SAP8C,EAAhD,C,CAQA;;AACA,cAAI,CAAC,8BAA8B,CAAC,MAApC,EAA4C;AAC3C,kBAAM,KAAK,IAAL,CACJ,IADI,CACC,KAAK,OAAL,GAAe,4CADhB,EAC8D;AAClE,cAAA,IAAI,EAAE;AACL,gBAAA,uBAAuB,EAAE,QAAQ,CAAC,QAD7B;AAEL,gBAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFvB;AAD4D,aAD9D,EAOJ,SAPI,EAAN;AAQA;AACD,S;AAAA;;AArH2B,KAA7B;;;YAG2B,iDAAA,CAAA,YAAA;;;AAHd,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACX,MAAA,UAAU,EAAE;AADD,KAAX,CAG4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,0BAA0B,GAAvC,MAAa,0BAAb,CAAuC;AAGtC,MAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFpB,aAAA,OAAA,GAAU,sDAAA,CAAA,aAAA,CAAA,CAAY,OAAtB;AAEwC;;AAElC,MAAA,sBAAsB,CAAC,WAAD,EAAY;;AACvC,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,qBADT,EACgC;AAC3C,YAAA,MAAM,EAAE;AACP,cAAA,MAAM,EAAE,QADD;AAEP,cAAA,gBAAgB,EAAE;AAFX;AADmC,WADhC,EAOX,SAPW,EAAb;AAQA,S;AAAA;;AAdqC,KAAvC;;;YAG2B,iDAAA,CAAA,YAAA;;;AAHd,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHtC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACX,MAAA,UAAU,EAAE;AADD,KAAX,CAGsC,CAAA,EAA1B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,sBAAsB,GAAnC,MAAa,sBAAb,CAAmC;AAElC,MAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,aAAA,IAAA,GAAA,IAAA;AADpB,aAAA,OAAA,GAAU,yDAAA,CAAA,aAAA,CAAA,CAAY,OAAtB;AACwC;;AAElC,MAAA,mBAAmB,GAAA;;AACxB,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,+BADT,EAC0C;AACrD,YAAA,EAAE,EAAE;AACH,cAAA,MAAM,EAAE,CADL;AAEH,cAAA,KAAK,EAAE;AAFJ,aADiD;AAKrD,YAAA,MAAM,EAAE;AACP,cAAA,MAAM,EAAC;AADA;AAL6C,WAD1C,EAUX,SAVW,EAAb;AAWA,S;AAAA;;AAEK,MAAA,eAAe,CAAC,QAAD,EAAS;;AAC7B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,uBAAf,EAAoD,QAApD,EAA8D,SAA9D,EAAb;AACA,S;AAAA;;AAEK,MAAA,YAAY,CAAC,QAAD,EAAS;;AAC1B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,oBAAf,EAAiD,QAAjD,EAA2D,SAA3D,EAAb;AACA,S;AAAA;;AACK,MAAA,gBAAgB,CAAC,EAAD,EAAG;;AACxB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,sBAA9B,EAAsD;AAAE,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE;AAAN;AAAR,WAAtD,EAA4E,SAA5E,EAAb;AACA,S;AAAA;;AACK,MAAA,uBAAuB,CAAC,QAAD,EAAS;;AACrC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,qCAAf,EAAkE,QAAlE,EAA4E,SAA5E,EAAb;AACA,S;AAAA;;AAEK,MAAA,2BAA2B,CAAC,QAAD,EAAmB,WAAnB,EAAsC;;AACtE,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,GAAe,kCADT,EAC6C;AACxD,YAAA,IAAI,EAAE;AACL,cAAA,aAAa,EAAE,QADV;AAEL,cAAA,iBAAiB,EAAE;AAFd;AADkD,WAD7C,EAOX,SAPW,EAAb;AAQA,S;AAAA;;AACK,MAAA,0BAA0B,CAAC,QAAD,EAAc;;AAC7C,cAAI,8BAA8B,GAAQ,MAAM,KAAK,IAAL,CAC9C,IAD8C,CACzC,KAAK,OAAL,GAAe,yCAD0B,EACiB;AAC/D,YAAA,MAAM,EAAE;AACP,cAAA,gBAAgB,EAAE,QAAQ,CAAC,WADpB;AAEP,cAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFrB;AADuD,WADjB,EAO9C,SAP8C,EAAhD,C,CAQA;;AACA,cAAI,CAAC,8BAA8B,CAAC,MAApC,EAA4C;AAC3C,kBAAM,KAAK,IAAL,CACJ,IADI,CACC,KAAK,OAAL,GAAe,qCADhB,EACuD;AAC3D,cAAA,IAAI,EAAE;AACL,gBAAA,gBAAgB,EAAE,QAAQ,CAAC,WADtB;AAEL,gBAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFvB;AADqD,aADvD,EAOJ,SAPI,EAAN;AAQA;;AACD;AACA,S;AAAA;;AAEK,MAAA,gCAAgC,CAAC,QAAD,EAAc;;AACnD,cAAI,8BAA8B,GAAQ,MAAM,KAAK,IAAL,CAC9C,IAD8C,CACzC,KAAK,OAAL,GAAe,gDAD0B,EACwB;AACtE,YAAA,MAAM,EAAE;AACP,cAAA,uBAAuB,EAAE,QAAQ,CAAC,QAD3B;AAEP,cAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFrB;AAD8D,WADxB,EAO9C,SAP8C,EAAhD,C,CAQA;;AACA,cAAI,CAAC,8BAA8B,CAAC,MAApC,EAA4C;AAC3C,kBAAM,KAAK,IAAL,CACJ,IADI,CACC,KAAK,OAAL,GAAe,4CADhB,EAC8D;AAClE,cAAA,IAAI,EAAE;AACL,gBAAA,uBAAuB,EAAE,QAAQ,CAAC,QAD7B;AAEL,gBAAA,iBAAiB,EAAE,QAAQ,CAAC;AAFvB;AAD4D,aAD9D,EAOJ,SAPI,EAAN;AAQA;AACD,S;AAAA;;AAEK,MAAA,0BAA0B,CAAC,WAAD,EAAoB;;AACnD,cAAI,IAAI,GAAQ,MAAM,KAAK,IAAL,CACpB,IADoB,CACf,KAAK,OAAL,GAAe,uCADA,EACyC;AAC7D,YAAA,MAAM,EAAE;AACP,cAAA,aAAa,EAAE;AADR;AADqD,WADzC,EAMpB,SANoB,EAAtB;AAOA,cAAI,SAAS,GAAa,IAAI,CAAC,IAAL,CAAU,GAAV,CAAe,CAAD,IAAO,CAAC,CAAC,uBAAvB,CAA1B;AACA,iBAAO,SAAP;AACA,S;AAAA;;AAjGiC,KAAnC;;;YAE2B,iDAAA,CAAA,YAAA;;;AAFd,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHlC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACX,MAAA,UAAU,EAAE;AADD,KAAX,CAGkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAG1B,MAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFpB,aAAA,OAAA,GAAU,sDAAA,CAAA,aAAA,CAAA,CAAY,OAAtB;AAEwC;;AAExC,MAAA,WAAW,CAAC,SAAD,EAAe;AACzB;AACA,eAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,SAA/C,CAAP;AACA;;AAED,MAAA,aAAa,CAAC,SAAD,EAAe;AAC3B,eAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,SAAjD,CAAP;AACA;;AAED,MAAA,SAAS,CAAC,SAAD,EAAe;AACvB,eAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,SAA/C,CAAP;AACA;;AAED,MAAA,aAAa,CAAC,SAAD,EAAU;AACtB,eAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,oBAAf,EAAiD,SAAjD,CAAP;AACA;;AAEK,MAAA,qBAAqB,CAAC,QAAD,EAAS;;AACnC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,oCAAf,EAAiE,QAAjE,EAA2E,SAA3E,EAAb;AACA,S;AAAA;;AAEK,MAAA,cAAc,GAAA;;AACnB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,oBAA9B,EAAoD,EAApD,EAAwD,SAAxD,EAAb;AACA,S;AAAA;;AA5ByB,KAA3B;;;YAG2B,iDAAA,CAAA,YAAA;;;AAHd,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACX,MAAA,UAAU,EAAE;AADD,KAAX,CAG0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC;AAEhC,MAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,aAAA,IAAA,GAAA,IAAA;AADpB,aAAA,OAAA,GAAU,sDAAA,CAAA,aAAA,CAAA,CAAY,OAAtB;AACwC;;AAElC,MAAA,kBAAkB,CAAC,WAAD,EAAoB;;AAC3C,gBAAM,YAAY,GAAQ,MAAM,KAAK,IAAL,CAC9B,IAD8B,CACzB,KAAK,OAAL,oBADyB,EACS;AACvC,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC;AADiC,WADT,EAM9B,SAN8B,EAAhC;AAOA,cAAI,MAAM,GAAQ,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,8BAAf,EAA2D;AAAE,YAAA,IAAI,EAAE;AAAE,cAAA,EAAE,EAAE,YAAY,CAAC,IAAb,CAAkB,gBAAlB,CAAmC;AAAzC;AAAR,WAA3D,EAAyI,SAAzI,EAAxB;AACA,UAAA,YAAY,CAAC,IAAb,CAAkB,gBAAlB,CAAmC,uBAAnC,GAA6D,MAAM,CAAC,IAApE;AACA,cAAI,SAAS,GAAG,YAAY,CAAC,IAAb,CAAkB,YAAlB,CAA+B,MAA/B,GAAwC,CAAxC,GAA4C,YAAY,CAAC,IAAb,CAAkB,YAAlB,CAA+B,MAA/B,CAAuC,CAAD,IAAO,CAAC,CAAC,kBAAF,KAAyB,WAAtE,CAA5C,GAAiI,CAAjJ;AACA,UAAA,YAAY,CAAC,IAAb,CAAkB,iBAAlB,GAAsC,YAAY,CAAC,IAAb,CAAkB,YAAlB,CAA+B,MAArE;AACA,UAAA,YAAY,CAAC,IAAb,CAAkB,eAAlB,GAAoC,SAAS,KAAK,CAAd,GAAkB,CAAlB,GAAsB,SAAS,CAAC,MAApE;AACA,iBAAO,YAAP;AACA,S;AAAA;;AAEK,MAAA,eAAe,CAAC,aAAD,EAAsB;;AAC1C,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,CACN,KAAK,OAAL,wBADM,EACgC;AAC3C,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC;AADqC,WADhC,EAMX,SANW,EAAb;AAOA,S;AAAA;;AAEK,MAAA,uBAAuB,CAAC,aAAD,EAAwB,MAAxB,EAAsC;;AAClE,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,WACH,KAAK,OADF,0BACgC;AAC3C,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC,aADqC;AAI3C,YAAA,IAAI,EAAE;AACL,cAAA,kBAAkB,EAAE;AADf;AAJqC,WADhC,EASX,SATW,EAAb;AAUA,S;AAAA;;AAEK,MAAA,iBAAiB,CAAC,OAAD,EAAkB,MAAlB,EAAgC;;AACtD,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,WACH,KAAK,OADF,uBAC6B;AACxC,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC,aADkC;AAIxC,YAAA,IAAI,EAAE;AACL,cAAA,YAAY,EAAE;AADT;AAJkC,WAD7B,EASX,SATW,EAAb;AAUA,S;AAAA;;AAEK,MAAA,oBAAoB,CAAC,QAAD,EAAc;;AACvC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,OAAvB,sBAAiD,QAAjD,EAA2D,SAA3D,EAAb;AACA,S;AAAA;;AAEK,MAAA,YAAY,CAAC,KAAD,EAAW;;AAC5B,gBAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,KAAV,CAAtB;AACA,gBAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,IAAV,CAAR,GAA0B,KAA1B,GAAkC,CAA/C;AACA,gBAAM,YAAY,GAAQ,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,yBAAf,EAAsD,KAAtD,EAA6D,SAA7D,EAAhC;AACA,gBAAM,aAAa,GAAQ,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,oBAAf,EAAiD,KAAjD,EAAwD,SAAxD,EAAjC;AACA,gBAAM,OAAO,CAAC,GAAR,CACL,YAAY,CAAC,IAAb,CAAkB,GAAlB,CAA6B,CAAP,IAAa,kCAAA,CAAA,WAAA,CAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClC,gBAAI,aAAa,GAAQ,MAAM,KAAK,IAAL,CAC7B,IAD6B,CACxB,KAAK,OAAL,uBADwB,EACa;AAC1C,cAAA,IAAI,EAAE;AACL,gBAAA,EAAE,EAAE,CAAC,CAAC,aAAF,CAAgB;AADf;AADoC,aADb,EAM7B,SAN6B,EAA/B;AAOA,YAAA,CAAC,CAAC,aAAF,CAAgB,gBAAhB,GAAmC,aAAa,CAAC,IAAjD;AACA,gBAAI,UAAU,GAAQ,MAAM,KAAK,IAAL,CAC1B,IAD0B,CACrB,KAAK,OAAL,yBADqB,EACkB;AAC5C,cAAA,IAAI,EAAE;AACL,gBAAA,EAAE,EAAE,CAAC,CAAC,aAAF,CAAgB;AADf;AADsC,aADlB,EAM1B,SAN0B,EAA5B;AAOA,YAAA,CAAC,CAAC,aAAF,CAAgB,aAAhB,GAAgC,UAAU,CAAC,IAA3C;AAEA,gBAAI,eAAe,GAAQ,MAAM,KAAK,IAAL,CAC/B,IAD+B,CAC1B,KAAK,OAAL,wBAD0B,EACY;AAC3C,cAAA,IAAI,EAAE;AACL,gBAAA,EAAE,EAAE,CAAC,CAAC,UAAF,CAAa;AADZ;AADqC,aADZ,EAM/B,SAN+B,EAAjC;AAOA,YAAA,CAAC,CAAC,UAAF,CAAa,kBAAb,GAAkC,eAAe,CAAC,IAAlD;AACA,WA1BkC,CAAnC,CADK,CAAN;AA6BA,cAAI,YAAY,GAAG,aAAa,CAAC,IAAjC;AACA,cAAI,SAAS,GAAG,YAAY,GAAG,CAAf,GAAmB,CAAC,IAAI,GAAG,CAAR,IAAa,KAAb,GAAqB,CAAxC,GAA4C,CAA5D;AACA,cAAI,OAAO,GAAG,YAAY,GAAG,CAAf,GAAmB,SAAS,GAAG,CAAZ,GAAgB,YAAY,CAAC,IAAb,CAAkB,MAArD,GAA8D,CAA5E;AACA,cAAI,SAAS,GAAG,IAAI,CAAC,IAAL,CAAU,aAAa,CAAC,IAAd,GAAqB,KAA/B,CAAhB;AACA,UAAA,YAAY,CAAC,iBAAb,GAAiC;AAAE,YAAA,IAAI,EAAE,SAAR;AAAmB,YAAA,EAAE,EAAE;AAAvB,WAAjC;AACA,UAAA,YAAY,CAAC,aAAb,GAA6B,YAA7B;AACA,UAAA,YAAY,CAAC,UAAb,GAA0B,SAA1B;AACA,iBAAO,YAAP;AACA,S;AAAA;;AAEK,MAAA,OAAO,CAAC,KAAD,EAAW;;AACvB,gBAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,KAAV,CAAtB;AACA,gBAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAN,CAAS,IAAV,CAAR,GAA0B,KAA1B,GAAkC,CAA/C;AACA,gBAAM,YAAY,GAAQ,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,oBAAf,EAAiD,KAAjD,EAAwD,SAAxD,EAAhC;AACA,gBAAM,aAAa,GAAQ,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,eAAf,EAA4C,KAA5C,EAAmD,SAAnD,EAAjC;AACA,gBAAM,OAAO,CAAC,GAAR,CACL,YAAY,CAAC,IAAb,CAAkB,GAAlB,CAA6B,CAAP,IAAa,kCAAA,CAAA,WAAA,CAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClC,gBAAI,YAAY,GAAQ,MAAM,KAAK,IAAL,CAC5B,IAD4B,CACvB,KAAK,OAAL,2BADuB,EACkB;AAC9C,cAAA,IAAI,EAAE;AACL,gBAAA,EAAE,EAAE,CAAC,CAAC,kBAAF,CAAqB;AADpB;AADwC,aADlB,EAM5B,SAN4B,EAA9B;AAOA,YAAA,CAAC,CAAC,kBAAF,CAAqB,eAArB,GAAuC,YAAY,CAAC,IAApD;AACA,WATkC,CAAnC,CADK,CAAN;AAYA,cAAI,YAAY,GAAG,aAAa,CAAC,IAAjC;AACA,cAAI,SAAS,GAAG,YAAY,GAAG,CAAf,GAAmB,CAAC,IAAI,GAAG,CAAR,IAAa,KAAb,GAAqB,CAAxC,GAA4C,CAA5D;AACA,cAAI,OAAO,GAAG,YAAY,GAAG,CAAf,GAAmB,SAAS,GAAG,CAAZ,GAAgB,YAAY,CAAC,IAAb,CAAkB,MAArD,GAA8D,CAA5E;AACA,cAAI,SAAS,GAAG,IAAI,CAAC,IAAL,CAAU,aAAa,CAAC,IAAd,GAAqB,KAA/B,CAAhB;AACA,UAAA,YAAY,CAAC,iBAAb,GAAiC;AAAE,YAAA,IAAI,EAAE,SAAR;AAAmB,YAAA,EAAE,EAAE;AAAvB,WAAjC;AACA,UAAA,YAAY,CAAC,aAAb,GAA6B,YAA7B;AACA,UAAA,YAAY,CAAC,UAAb,GAA0B,SAA1B;AACA,iBAAO,YAAP;AACA,S;AAAA;;AAEK,MAAA,oBAAoB,CAAC,UAAD,EAAqB,MAArB,EAAmC;;AAC5D,iBAAO,MAAM,KAAK,IAAL,CACX,IADW,WACH,KAAK,OADF,uBAC6B;AACxC,YAAA,IAAI,EAAE;AACL,cAAA,EAAE,EAAE;AADC,aADkC;AAIxC,YAAA,IAAI,EAAE;AACL,cAAA,cAAc,EAAE;AADX;AAJkC,WAD7B,EASX,SATW,EAAb;AAUA,S;AAAA;;AAEK,MAAA,gBAAgB,CAAC,IAAD,EAAK;;AAC1B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,8BAA9B,EAA8D,IAA9D,EAAoE,SAApE,EAAb;AACA,S;AAAA;;AAEK,MAAA,qBAAqB,CAAC,IAAD,EAAK;;AAC/B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,6BAA9B,EAA6D,IAA7D,EAAmE,SAAnE,EAAb;AACA,S;AAAA;;AAEK,MAAA,0BAA0B,CAAC,IAAD,EAAK;;AACpC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,8BAA9B,EAA8D,IAA9D,EAAoE,SAApE,EAAb;AACA,S;AAAA;;AAEK,MAAA,iBAAiB,CAAC,IAAD,EAAK;;AAC3B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,+BAA9B,EAA+D,IAA/D,EAAqE,SAArE,EAAb;AACA,S;AAAA;;AAEK,MAAA,sBAAsB,CAAC,IAAD,EAAK;;AAChC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,8BAA9B,EAA8D,IAA9D,EAAoE,SAApE,EAAb;AACA,S;AAAA;;AAEK,MAAA,2BAA2B,CAAC,IAAD,EAAK;;AACrC,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,+BAA9B,EAA+D,IAA/D,EAAqE,SAArE,EAAb;AACA,S;AAAA;;AAEK,MAAA,cAAc,CAAC,IAAD,EAAK;;AACxB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,4BAA9B,EAA4D,IAA5D,EAAkE,SAAlE,EAAb;AACA,S;AAAA;;AAEK,MAAA,cAAc,CAAC,IAAD,EAAK;;AACxB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,2BAA9B,EAA2D,IAA3D,EAAiE,SAAjE,EAAb;AACA,S;AAAA;;AAEK,MAAA,mBAAmB,CAAC,IAAD,EAAK;;AAC7B,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,4BAA9B,EAA4D,IAA5D,EAAkE,SAAlE,EAAb;AACA,S;AAAA;;AAEK,MAAA,aAAa,CAAC,IAAD,EAAK;;AACvB,iBAAO,MAAM,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,2BAA9B,EAA2D,IAA3D,EAAiE,SAAjE,EAAb;AACA,S;AAAA;;AAtL+B,KAAjC;;;YAE2B,iDAAA,CAAA,YAAA;;;AAFd,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHhC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACX,MAAA,UAAU,EAAE;AADD,KAAX,CAGgC,CAAA,EAApB,oBAAoB,CAApB","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ChallengeService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getChallenge(id) {\r\n\t\treturn await this.http.post(this.api_url + \"/challenges/select\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\r\n\tasync getChallengeById(id: number) {\r\n\t\treturn await this.http.post(this.api_url + \"/challenges/select_by_id\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\r\n\tasync getRelatedSolutions(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/solutions/related\", {\r\n\t\t\t\tchallenge_id: challengeId,\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getSolutions(ids: number[]) {\r\n\t\tlet resp: any = await this.http\r\n\t\t\t.post(this.api_url + \"/solutions/select_mul\", {\r\n\t\t\t\tslug: { id: ids },\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\treturn resp.data;\r\n\t}\r\n\r\n\tasync createAnchorForChallenge(postData) {\r\n\t\treturn await this.http.post(this.api_url + \"/anchors/create\", postData).toPromise();\r\n\t}\r\n\r\n\tasync getAnchorsForChallenge(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: challengeId,\r\n\t\t\t\t\tstatus: \"active\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getAnchorById(anchorId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select\", {\r\n\t\t\t\tslug: { id: anchorId },\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync associateAnchorAndSmartCity(anchorId: number, smartCityId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors_and_smart_cities/create\", {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfrg_anchor_id: anchorId,\r\n\t\t\t\t\tfrg_smart_city_id: smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getSeekerCity(seekerId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/seekers/select_slug\", {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: seekerId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync associateChallengewithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tasync associateChallengeSectorwithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge sector association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class AnchorWidgetServiceService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getAnchorsForChallenge(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tstatus: \"active\",\r\n\t\t\t\t\tfrg_challenge_id: challengeId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CreateChallengeService {\r\n\tapi_url = environment.api_url;\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getChallengeSectors() {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/challenge_sectors/select_mul\", {\r\n\t\t\t\tpg: {\r\n\t\t\t\t\toffset: 0,\r\n\t\t\t\t\tlimit: 200,\r\n\t\t\t\t},\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tstatus:'active'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync createChallenge(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/challenges/create`, postData).toPromise();\r\n\t}\r\n\r\n\tasync createAnchor(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/anchors/create`, postData).toPromise();\r\n\t}\r\n\tasync getSeekerDetails(id) {\r\n\t\treturn await this.http.post(this.api_url + \"/seekers/select_slug\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\tasync createAnchorSmartCities(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/anchors_and_smart_cities/create`, postData).toPromise();\r\n\t}\r\n\r\n\tasync associateAnchorAndSmartCity(anchorId: number, smartCityId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors_and_smart_cities/create\", {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfrg_anchor_id: anchorId,\r\n\t\t\t\t\tfrg_smart_city_id: smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\tasync associateChallengewithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tasync associateChallengeSectorwithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge sector association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t}\r\n\r\n\tasync getSectorIdsFollowedByUser(cityAdminId: number) {\r\n\t\tlet resp: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenge_sectors_seekers/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_seeker_id: cityAdminId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\tlet sectorIds: number[] = resp.data.map((e) => e.frg_challenge_sector_id);\r\n\t\treturn sectorIds;\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class SeekersService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tsaveUserApi(post_data: any) {\r\n\t\t// console.log(post_data);\r\n\t\treturn this.http.post(this.api_url + \"/users/create\", post_data);\r\n\t}\r\n\r\n\tsaveSeekerApi(post_data: any) {\r\n\t\treturn this.http.post(this.api_url + \"/seekers/create\", post_data);\r\n\t}\r\n\r\n\tverifyOtp(post_data: any) {\r\n\t\treturn this.http.post(this.api_url + \"/users/verify\", post_data);\r\n\t}\r\n\r\n\tuploadAvataar(post_data) {\r\n\t\treturn this.http.post(this.api_url + `/seekers/upload`, post_data);\r\n\t}\r\n\r\n\tasync resendVerficationCode(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/users/resend_verification_code`, postData).toPromise();\r\n\t}\r\n\r\n\tasync getSmartCities() {\r\n\t\treturn await this.http.post(this.api_url + \"/smart_cities/list\", {}).toPromise();\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class DashboardmainService {\r\n\tapi_url = environment.api_url;\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getAnchorChallenge(challengeId: number) {\r\n\t\tconst dataResponse: any = await this.http\r\n\t\t\t.post(this.api_url + `/anchors/select`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: challengeId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\tlet sector: any = await this.http.post(this.api_url + `/challenge_sectors/select`, { slug: { id: dataResponse.data.frg_challenge_id.frg_challenge_sector_id } }).toPromise();\r\n\t\tdataResponse.data.frg_challenge_id.frg_challenge_sector_id = sector.data;\r\n\t\tlet shortList = dataResponse.data.applications.length > 0 ? dataResponse.data.applications.filter((d) => d.application_status === \"Shortlist\") : 0;\r\n\t\tdataResponse.data.application_count = dataResponse.data.applications.length;\r\n\t\tdataResponse.data.shortlist_count = shortList === 0 ? 0 : shortList.length;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync applicationById(applicationId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + `/application/select`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: applicationId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updateApplicationStatus(applicationId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/application/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: applicationId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tapplication_status: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updatePilotStatus(pilotId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/proposal/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: pilotId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tpilot_status: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updateChallengeBrief(postData: any) {\r\n\t\treturn await this.http.post(`${this.api_url}/anchors/update`, postData).toPromise();\r\n\t}\r\n\r\n\tasync getProposals(query: any) {\r\n\t\tconst limit = parseInt(query.pg.limit);\r\n\t\tconst page = parseInt(query.pg.skip) / limit + 1;\r\n\t\tconst dataResponse: any = await this.http.post(this.api_url + `/proposal/select_mul`, query).toPromise();\r\n\t\tconst countResponse: any = await this.http.post(this.api_url + `/proposal/count`, query).toPromise();\r\n\t\tawait Promise.all(\r\n\t\t\tdataResponse.data.map(async (p) => {\r\n\t\t\t\tlet challengeResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/challenges/select`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_anchor_id.frg_challenge_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_anchor_id.frg_challenge_id = challengeResp.data;\r\n\t\t\t\tlet seekerResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/seekers/select_slug`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_anchor_id.frg_seeker_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_anchor_id.frg_seeker_id = seekerResp.data;\r\n\r\n\t\t\t\tlet applicationResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/application/select`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_eoi_id.frg_application_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_eoi_id.frg_application_id = applicationResp.data;\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet totalResults = countResponse.data;\r\n\t\tlet startItem = totalResults > 0 ? (page - 1) * limit + 1 : 0;\r\n\t\tlet endItem = totalResults > 0 ? startItem - 1 + dataResponse.data.length : 0;\r\n\t\tlet PageCount = Math.ceil(countResponse.data / limit);\r\n\t\tdataResponse.currently_showing = { from: startItem, to: endItem };\r\n\t\tdataResponse.total_results = totalResults;\r\n\t\tdataResponse.page_count = PageCount;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync getEois(query: any) {\r\n\t\tconst limit = parseInt(query.pg.limit);\r\n\t\tconst page = parseInt(query.pg.skip) / limit + 1;\r\n\t\tconst dataResponse: any = await this.http.post(this.api_url + `/eoi/select_mul`, query).toPromise();\r\n\t\tconst countResponse: any = await this.http.post(this.api_url + `/eoi/count`, query).toPromise();\r\n\t\tawait Promise.all(\r\n\t\t\tdataResponse.data.map(async (p) => {\r\n\t\t\t\tlet providerResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/providers/select_slug`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_application_id.frg_provider_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_application_id.frg_provider_id = providerResp.data;\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet totalResults = countResponse.data;\r\n\t\tlet startItem = totalResults > 0 ? (page - 1) * limit + 1 : 0;\r\n\t\tlet endItem = totalResults > 0 ? startItem - 1 + dataResponse.data.length : 0;\r\n\t\tlet PageCount = Math.ceil(countResponse.data / limit);\r\n\t\tdataResponse.currently_showing = { from: startItem, to: endItem };\r\n\t\tdataResponse.total_results = totalResults;\r\n\t\tdataResponse.page_count = PageCount;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync updateProposalStatus(proposalId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/proposal/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: proposalId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tproposal_stage: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync PilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToPilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromPilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync PilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToPilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromPilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync PilotIIcUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToIICUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromIICUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync rejecProposal(data){\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/reject_proposal\", data).toPromise();\r\n\t}\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}