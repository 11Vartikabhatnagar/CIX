{"version":3,"sources":["./src/app/challenge/challenge.service.ts","./src/app/challenge/components/anchor-widget/anchor-widget-service.service.ts","./src/app/challenge/create-challenge/create-challenge.service.ts","./src/app/register/seekers/seekers.service.ts","./src/app/seeker/challenge-dashboard/dashboardmain.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class ChallengeService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getChallenge(id) {\r\n\t\treturn await this.http.post(this.api_url + \"/challenges/select\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\r\n\tasync getChallengeById(id: number) {\r\n\t\treturn await this.http.post(this.api_url + \"/challenges/select_by_id\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\r\n\tasync getRelatedSolutions(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/solutions/related\", {\r\n\t\t\t\tchallenge_id: challengeId,\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getSolutions(ids: number[]) {\r\n\t\tlet resp: any = await this.http\r\n\t\t\t.post(this.api_url + \"/solutions/select_mul\", {\r\n\t\t\t\tslug: { id: ids },\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\treturn resp.data;\r\n\t}\r\n\r\n\tasync createAnchorForChallenge(postData) {\r\n\t\treturn await this.http.post(this.api_url + \"/anchors/create\", postData).toPromise();\r\n\t}\r\n\r\n\tasync getAnchorsForChallenge(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: challengeId,\r\n\t\t\t\t\tstatus: \"active\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getAnchorById(anchorId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select\", {\r\n\t\t\t\tslug: { id: anchorId },\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync associateAnchorAndSmartCity(anchorId: number, smartCityId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors_and_smart_cities/create\", {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfrg_anchor_id: anchorId,\r\n\t\t\t\t\tfrg_smart_city_id: smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync getSeekerCity(seekerId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/seekers/select_slug\", {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: seekerId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync associateChallengewithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tasync associateChallengeSectorwithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge sector association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class AnchorWidgetServiceService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getAnchorsForChallenge(challengeId) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tstatus: \"active\",\r\n\t\t\t\t\tfrg_challenge_id: challengeId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CreateChallengeService {\r\n\tapi_url = environment.api_url;\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getChallengeSectors() {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/challenge_sectors/select_mul\", {\r\n\t\t\t\tpg: {\r\n\t\t\t\t\toffset: 0,\r\n\t\t\t\t\tlimit: 200,\r\n\t\t\t\t},\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tstatus:'active'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync createChallenge(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/challenges/create`, postData).toPromise();\r\n\t}\r\n\r\n\tasync createAnchor(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/anchors/create`, postData).toPromise();\r\n\t}\r\n\tasync getSeekerDetails(id) {\r\n\t\treturn await this.http.post(this.api_url + \"/seekers/select_slug\", { slug: { id: id } }).toPromise();\r\n\t}\r\n\tasync createAnchorSmartCities(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/anchors_and_smart_cities/create`, postData).toPromise();\r\n\t}\r\n\r\n\tasync associateAnchorAndSmartCity(anchorId: number, smartCityId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + \"/anchors_and_smart_cities/create\", {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfrg_anchor_id: anchorId,\r\n\t\t\t\t\tfrg_smart_city_id: smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\tasync associateChallengewithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/challenges_and_smart_cities/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_id: idParams.challengeId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tasync associateChallengeSectorwithCity(idParams: any) {\r\n\t\tlet checkIfAssociationAlreadyExist: any = await this.http\r\n\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\t// console.log('challenge sector association exist', checkIfAssociationAlreadyExist.status);\r\n\t\tif (!checkIfAssociationAlreadyExist.status) {\r\n\t\t\tawait this.http\r\n\t\t\t\t.post(this.api_url + \"/smart_cities_and_challenge_sectors/create\", {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfrg_challenge_sector_id: idParams.sectorId,\r\n\t\t\t\t\t\tfrg_smart_city_id: idParams.smartCityId,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.toPromise();\r\n\t\t}\r\n\t}\r\n\r\n\tasync getSectorIdsFollowedByUser(cityAdminId: number) {\r\n\t\tlet resp: any = await this.http\r\n\t\t\t.post(this.api_url + \"/challenge_sectors_seekers/select_mul\", {\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tfrg_seeker_id: cityAdminId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\tlet sectorIds: number[] = resp.data.map((e) => e.frg_challenge_sector_id);\r\n\t\treturn sectorIds;\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class SeekersService {\r\n\tapi_url = environment.api_url;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tsaveUserApi(post_data: any) {\r\n\t\t// console.log(post_data);\r\n\t\treturn this.http.post(this.api_url + \"/users/create\", post_data);\r\n\t}\r\n\r\n\tsaveSeekerApi(post_data: any) {\r\n\t\treturn this.http.post(this.api_url + \"/seekers/create\", post_data);\r\n\t}\r\n\r\n\tverifyOtp(post_data: any) {\r\n\t\treturn this.http.post(this.api_url + \"/users/verify\", post_data);\r\n\t}\r\n\r\n\tuploadAvataar(post_data) {\r\n\t\treturn this.http.post(this.api_url + `/seekers/upload`, post_data);\r\n\t}\r\n\r\n\tasync resendVerficationCode(postData) {\r\n\t\treturn await this.http.post(this.api_url + `/users/resend_verification_code`, postData).toPromise();\r\n\t}\r\n\r\n\tasync getSmartCities() {\r\n\t\treturn await this.http.post(this.api_url + \"/smart_cities/list\", {}).toPromise();\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class DashboardmainService {\r\n\tapi_url = environment.api_url;\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tasync getAnchorChallenge(challengeId: number) {\r\n\t\tconst dataResponse: any = await this.http\r\n\t\t\t.post(this.api_url + `/anchors/select`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: challengeId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t\tlet sector: any = await this.http.post(this.api_url + `/challenge_sectors/select`, { slug: { id: dataResponse.data.frg_challenge_id.frg_challenge_sector_id } }).toPromise();\r\n\t\tdataResponse.data.frg_challenge_id.frg_challenge_sector_id = sector.data;\r\n\t\tlet shortList = dataResponse.data.applications.length > 0 ? dataResponse.data.applications.filter((d) => d.application_status === \"Shortlist\") : 0;\r\n\t\tdataResponse.data.application_count = dataResponse.data.applications.length;\r\n\t\tdataResponse.data.shortlist_count = shortList === 0 ? 0 : shortList.length;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync applicationById(applicationId: number) {\r\n\t\treturn await this.http\r\n\t\t\t.post(this.api_url + `/application/select`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: applicationId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updateApplicationStatus(applicationId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/application/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: applicationId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tapplication_status: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updatePilotStatus(pilotId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/proposal/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: pilotId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tpilot_status: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync updateChallengeBrief(postData: any) {\r\n\t\treturn await this.http.post(`${this.api_url}/anchors/update`, postData).toPromise();\r\n\t}\r\n\r\n\tasync getProposals(query: any) {\r\n\t\tconst limit = parseInt(query.pg.limit);\r\n\t\tconst page = parseInt(query.pg.skip) / limit + 1;\r\n\t\tconst dataResponse: any = await this.http.post(this.api_url + `/proposal/select_mul`, query).toPromise();\r\n\t\tconst countResponse: any = await this.http.post(this.api_url + `/proposal/count`, query).toPromise();\r\n\t\tawait Promise.all(\r\n\t\t\tdataResponse.data.map(async (p) => {\r\n\t\t\t\tlet challengeResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/challenges/select`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_anchor_id.frg_challenge_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_anchor_id.frg_challenge_id = challengeResp.data;\r\n\t\t\t\tlet seekerResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/seekers/select_slug`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_anchor_id.frg_seeker_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_anchor_id.frg_seeker_id = seekerResp.data;\r\n\r\n\t\t\t\tlet applicationResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/application/select`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_eoi_id.frg_application_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_eoi_id.frg_application_id = applicationResp.data;\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet totalResults = countResponse.data;\r\n\t\tlet startItem = totalResults > 0 ? (page - 1) * limit + 1 : 0;\r\n\t\tlet endItem = totalResults > 0 ? startItem - 1 + dataResponse.data.length : 0;\r\n\t\tlet PageCount = Math.ceil(countResponse.data / limit);\r\n\t\tdataResponse.currently_showing = { from: startItem, to: endItem };\r\n\t\tdataResponse.total_results = totalResults;\r\n\t\tdataResponse.page_count = PageCount;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync getEois(query: any) {\r\n\t\tconst limit = parseInt(query.pg.limit);\r\n\t\tconst page = parseInt(query.pg.skip) / limit + 1;\r\n\t\tconst dataResponse: any = await this.http.post(this.api_url + `/eoi/select_mul`, query).toPromise();\r\n\t\tconst countResponse: any = await this.http.post(this.api_url + `/eoi/count`, query).toPromise();\r\n\t\tawait Promise.all(\r\n\t\t\tdataResponse.data.map(async (p) => {\r\n\t\t\t\tlet providerResp: any = await this.http\r\n\t\t\t\t\t.post(this.api_url + `/providers/select_slug`, {\r\n\t\t\t\t\t\tslug: {\r\n\t\t\t\t\t\t\tid: p.frg_application_id.frg_provider_id,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toPromise();\r\n\t\t\t\tp.frg_application_id.frg_provider_id = providerResp.data;\r\n\t\t\t})\r\n\t\t);\r\n\t\tlet totalResults = countResponse.data;\r\n\t\tlet startItem = totalResults > 0 ? (page - 1) * limit + 1 : 0;\r\n\t\tlet endItem = totalResults > 0 ? startItem - 1 + dataResponse.data.length : 0;\r\n\t\tlet PageCount = Math.ceil(countResponse.data / limit);\r\n\t\tdataResponse.currently_showing = { from: startItem, to: endItem };\r\n\t\tdataResponse.total_results = totalResults;\r\n\t\tdataResponse.page_count = PageCount;\r\n\t\treturn dataResponse;\r\n\t}\r\n\r\n\tasync updateProposalStatus(proposalId: number, status: string) {\r\n\t\treturn await this.http\r\n\t\t\t.post(`${this.api_url}/proposal/update`, {\r\n\t\t\t\tslug: {\r\n\t\t\t\t\tid: proposalId,\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tproposal_stage: status,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.toPromise();\r\n\t}\r\n\r\n\tasync PilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToPilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromPilotOrderUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_order\", data).toPromise();\r\n\t}\r\n\r\n\tasync PilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToPilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromPilotReportUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_report\", data).toPromise();\r\n\t}\r\n\r\n\tasync PilotIIcUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/upload_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync addToIICUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/addto_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync removeFromIICUpload(data) {\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/remove_pilot_iic\", data).toPromise();\r\n\t}\r\n\r\n\tasync rejecProposal(data){\r\n\t\treturn await this.http.post(this.api_url + \"/proposal/reject_proposal\", data).toPromise();\r\n\t}\r\n}\r\n"],"sourceRoot":"webpack:///"}